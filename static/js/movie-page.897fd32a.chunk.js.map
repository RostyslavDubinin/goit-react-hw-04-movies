{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","component/SrchBar.js","views/MoviesPage.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","SrchBar","onSubmit","useState","searchQuery","setSearchQuery","event","preventDefault","trim","alert","type","autoComplete","autoFocus","placeholder","onChange","toLowerCase","Movies","movies","setMovies","history","useHistory","location","useLocation","searchURL","URLSearchParams","search","get","useEffect","fetchSearchMovies","then","data","results","catch","error","setHistory","MoviesList"],"mappings":"yIAAe,SAASA,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,ECVT,SAASQ,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,eAEtDM,EAAKM,KAAKC,MAAMP,EAAME,GAGxB,OAAOF,EAGM,SAASQ,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNb,EAAQL,OAAOqB,IAAS,GAAMC,SAAQ,SAAUxB,GAC9C,EAAemB,EAAQnB,EAAKuB,EAAOvB,OAE5BE,OAAOuB,0BAChBvB,OAAOwB,iBAAiBP,EAAQjB,OAAOuB,0BAA0BF,IAEjEhB,EAAQL,OAAOqB,IAASC,SAAQ,SAAUxB,GACxCE,OAAOC,eAAegB,EAAQnB,EAAKE,OAAOa,yBAAyBQ,EAAQvB,OAKjF,OAAOmB,E,gFCOMQ,MAtCf,YAAgC,IAAbC,EAAY,EAAZA,SACjB,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAgBA,OACE,iCACE,uBAAMH,SAZW,SAACI,GACpBA,EAAMC,iBAEqB,KAAvBH,EAAYI,OAKhBN,EAASE,GAJPK,MAAM,4BAQN,UACE,gCACE,uBACEC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,eACZtC,MAAO6B,EACPU,SAxBgB,SAACR,GACzBD,EAAeC,EAAMb,OAAOlB,MAAMwC,oBA0B9B,wBAAQL,KAAK,SAAb,0B,gBCzBO,SAASM,IAAU,IAAD,EAC/B,EAA4Bb,mBAAS,MAArC,mBAAOc,EAAP,KAAeC,EAAf,KACA,EAAsCf,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACMc,EAAUC,cACVC,EAAWC,cAEXC,EAAS,UAAG,IAAIC,gBAAgBH,EAASI,QAAQC,IAAI,gBAA5C,QAAwD,GAEvEC,qBAAU,WACHvB,GAILwB,YAAkBxB,GACfyB,MAAK,SAACC,GACAA,EAAKC,QAAQnC,OAIlBsB,EAAUY,EAAKC,SAHbtB,MAAM,6BAKTuB,OAAM,SAACC,GAAD,OAAWxB,MAAM,2CACzB,CAACL,IAEJuB,qBAAU,WACU,KAAdJ,GAGJlB,EAAekB,KACd,CAACA,IAcJ,OACE,qCACE,cAAC,EAAD,CAASrB,SAPI,SAACE,GAChBC,EAAeD,GARE,SAACA,GAClBe,EAAQ7B,KAAR,OACK+B,GADL,IAEEI,OAAO,SAAD,OAAWrB,MAMnB8B,CAAW9B,MAMRa,GAAU,cAACkB,EAAA,EAAD,CAAYlB,OAAQA","file":"static/js/movie-page.897fd32a.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useState } from \"react\";\n\nfunction SrchBar({ onSubmit }) {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const handleInputChange = (event) => {\n    setSearchQuery(event.target.value.toLowerCase());\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (searchQuery.trim() === \"\") {\n      alert(\"Please add search query\");\n      return;\n    }\n\n    onSubmit(searchQuery);\n  };\n  return (\n    <header>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <input\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movie\"\n            value={searchQuery}\n            onChange={handleInputChange}\n          ></input>\n        </label>\n        <button type=\"submit\">\n          Search\n        </button>\n      </form>\n    </header>\n  );\n}\n\nexport default SrchBar;","import { useState, useEffect } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\n\nimport SrchBar from \"../component/SrchBar\";\nimport MoviesList from \"../component/MoviesList\";\nimport { fetchSearchMovies } from \"./api-service.js\";\n\nexport default function Movies() {\n  const [movies, setMovies] = useState(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const history = useHistory();\n  const location = useLocation();\n\n  const searchURL = new URLSearchParams(location.search).get(\"query\") ?? \"\";\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    fetchSearchMovies(searchQuery)\n      .then((data) => {\n        if (!data.results.length) {\n          alert(\"No result:(  try again\");\n          return;\n        }\n        setMovies(data.results);\n      })\n      .catch((error) => alert(\"Smth went wrong:( please try again\"));\n  }, [searchQuery]);\n\n  useEffect(() => {\n    if (searchURL === \"\") {\n      return;\n    }\n    setSearchQuery(searchURL);\n  }, [searchURL]);\n\n  const setHistory = (searchQuery) => {\n    history.push({\n      ...location,\n      search: `query=${searchQuery}`,\n    });\n  };\n\n  const onSubmit = (searchQuery) => {\n    setSearchQuery(searchQuery);\n    setHistory(searchQuery);\n  };\n\n  return (\n    <>\n      <SrchBar onSubmit={onSubmit} />\n      {movies && <MoviesList movies={movies} />}\n    </>\n  );\n}"],"sourceRoot":""}